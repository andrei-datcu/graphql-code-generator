{"version":3,"file":"index.esm.js","sources":["../../../dist/plugins/typescript/react-query/src/variables-generator.js","../../../dist/plugins/typescript/react-query/src/fetcher-fetch.js","../../../dist/plugins/typescript/react-query/src/fetcher-fetch-hardcoded.js","../../../dist/plugins/typescript/react-query/src/fetcher-graphql-request.js","../../../dist/plugins/typescript/react-query/src/fetcher-custom-mapper.js","../../../dist/plugins/typescript/react-query/src/visitor.js","../../../dist/plugins/typescript/react-query/src/index.js"],"sourcesContent":["export function generateQueryVariablesSignature(hasRequiredVariables, operationVariablesTypes) {\r\n    return `variables${hasRequiredVariables ? '' : '?'}: ${operationVariablesTypes}`;\r\n}\r\nexport function generateQueryKey(node) {\r\n    return `['${node.name.value}', variables]`;\r\n}\r\nexport function generateQueryKeyMaker(node, operationName, operationVariablesTypes, hasRequiredVariables) {\r\n    const signature = generateQueryVariablesSignature(hasRequiredVariables, operationVariablesTypes);\r\n    return `\\nuse${operationName}.getKey = (${signature}) => ${generateQueryKey(node)};\\n`;\r\n}\r\n//# sourceMappingURL=variables-generator.js.map","import { generateQueryKey, generateQueryVariablesSignature } from './variables-generator';\r\nexport class FetchFetcher {\r\n    constructor(visitor) {\r\n        this.visitor = visitor;\r\n    }\r\n    generateFetcherImplementaion() {\r\n        return `\r\nfunction fetcher<TData, TVariables>(endpoint: string, requestInit: RequestInit, query: string, variables?: TVariables) {\r\n  return async (): Promise<TData> => {\r\n    const res = await fetch(endpoint, {\r\n      method: 'POST',\r\n      ...requestInit,\r\n      body: JSON.stringify({ query, variables }),\r\n    });\r\n\r\n    const json = await res.json();\r\n\r\n    if (json.errors) {\r\n      const { message } = json.errors[0];\r\n\r\n      throw new Error(message);\r\n    }\r\n\r\n    return json.data;\r\n  }\r\n}`;\r\n    }\r\n    generateQueryHook(node, documentVariableName, operationName, operationResultType, operationVariablesTypes, hasRequiredVariables) {\r\n        const variables = generateQueryVariablesSignature(hasRequiredVariables, operationVariablesTypes);\r\n        const hookConfig = this.visitor.queryMethodMap;\r\n        this.visitor.reactQueryIdentifiersInUse.add(hookConfig.query.hook);\r\n        this.visitor.reactQueryIdentifiersInUse.add(hookConfig.query.options);\r\n        const options = `options?: ${hookConfig.query.options}<${operationResultType}, TError, TData>`;\r\n        return `export const use${operationName} = <\r\n      TData = ${operationResultType},\r\n      TError = unknown\r\n    >(\r\n      dataSource: { endpoint: string, fetchParams?: RequestInit }, \r\n      ${variables}, \r\n      ${options}\r\n    ) => \r\n    ${hookConfig.query.hook}<${operationResultType}, TError, TData>(\r\n      ${generateQueryKey(node)},\r\n      fetcher<${operationResultType}, ${operationVariablesTypes}>(dataSource.endpoint, dataSource.fetchParams || {}, ${documentVariableName}, variables),\r\n      options\r\n    );`;\r\n    }\r\n    generateMutationHook(node, documentVariableName, operationName, operationResultType, operationVariablesTypes) {\r\n        const variables = `variables?: ${operationVariablesTypes}`;\r\n        const hookConfig = this.visitor.queryMethodMap;\r\n        this.visitor.reactQueryIdentifiersInUse.add(hookConfig.mutation.hook);\r\n        this.visitor.reactQueryIdentifiersInUse.add(hookConfig.mutation.options);\r\n        const options = `options?: ${hookConfig.mutation.options}<${operationResultType}, TError, ${operationVariablesTypes}, TContext>`;\r\n        return `export const use${operationName} = <\r\n      TError = unknown,\r\n      TContext = unknown\r\n    >(\r\n      dataSource: { endpoint: string, fetchParams?: RequestInit }, \r\n      ${options}\r\n    ) => \r\n    ${hookConfig.mutation.hook}<${operationResultType}, TError, ${operationVariablesTypes}, TContext>(\r\n      (${variables}) => fetcher<${operationResultType}, ${operationVariablesTypes}>(dataSource.endpoint, dataSource.fetchParams || {}, ${documentVariableName}, variables)(),\r\n      options\r\n    );`;\r\n    }\r\n}\r\n//# sourceMappingURL=fetcher-fetch.js.map","import { URL } from 'url';\r\nimport { generateQueryKey, generateQueryVariablesSignature } from './variables-generator';\r\nexport class HardcodedFetchFetcher {\r\n    constructor(visitor, config) {\r\n        this.visitor = visitor;\r\n        this.config = config;\r\n    }\r\n    getEndpoint() {\r\n        try {\r\n            new URL(this.config.endpoint);\r\n            return JSON.stringify(this.config.endpoint);\r\n        }\r\n        catch (e) {\r\n            return `${this.config.endpoint} as string`;\r\n        }\r\n    }\r\n    getFetchParams() {\r\n        const fetchParams = {\r\n            method: 'POST',\r\n            ...(this.config.fetchParams || {}),\r\n        };\r\n        return Object.keys(fetchParams)\r\n            .map(key => {\r\n            return `      ${key}: ${JSON.stringify(fetchParams[key])},`;\r\n        })\r\n            .join('\\n');\r\n    }\r\n    generateFetcherImplementaion() {\r\n        return `\r\nfunction fetcher<TData, TVariables>(query: string, variables?: TVariables) {\r\n  return async (): Promise<TData> => {\r\n    const res = await fetch(${this.getEndpoint()}, {\r\n${this.getFetchParams()}\r\n      body: JSON.stringify({ query, variables }),\r\n    });\r\n    \r\n    const json = await res.json();\r\n\r\n    if (json.errors) {\r\n      const { message } = json.errors[0];\r\n\r\n      throw new Error(message);\r\n    }\r\n\r\n    return json.data;\r\n  }\r\n}`;\r\n    }\r\n    generateQueryHook(node, documentVariableName, operationName, operationResultType, operationVariablesTypes, hasRequiredVariables) {\r\n        const variables = generateQueryVariablesSignature(hasRequiredVariables, operationVariablesTypes);\r\n        const hookConfig = this.visitor.queryMethodMap;\r\n        this.visitor.reactQueryIdentifiersInUse.add(hookConfig.query.hook);\r\n        this.visitor.reactQueryIdentifiersInUse.add(hookConfig.query.options);\r\n        const options = `options?: ${hookConfig.query.options}<${operationResultType}, TError, TData>`;\r\n        return `export const use${operationName} = <\r\n      TData = ${operationResultType},\r\n      TError = unknown\r\n    >(\r\n      ${variables}, \r\n      ${options}\r\n    ) => \r\n    ${hookConfig.query.hook}<${operationResultType}, TError, TData>(\r\n      ${generateQueryKey(node)},\r\n      fetcher<${operationResultType}, ${operationVariablesTypes}>(${documentVariableName}, variables),\r\n      options\r\n    );`;\r\n    }\r\n    generateMutationHook(node, documentVariableName, operationName, operationResultType, operationVariablesTypes) {\r\n        const variables = `variables?: ${operationVariablesTypes}`;\r\n        const hookConfig = this.visitor.queryMethodMap;\r\n        this.visitor.reactQueryIdentifiersInUse.add(hookConfig.mutation.hook);\r\n        this.visitor.reactQueryIdentifiersInUse.add(hookConfig.mutation.options);\r\n        const options = `options?: ${hookConfig.mutation.options}<${operationResultType}, TError, ${operationVariablesTypes}, TContext>`;\r\n        return `export const use${operationName} = <\r\n      TError = unknown,\r\n      TContext = unknown\r\n    >(${options}) => \r\n    ${hookConfig.mutation.hook}<${operationResultType}, TError, ${operationVariablesTypes}, TContext>(\r\n      (${variables}) => fetcher<${operationResultType}, ${operationVariablesTypes}>(${documentVariableName}, variables)(),\r\n      options\r\n    );`;\r\n    }\r\n}\r\n//# sourceMappingURL=fetcher-fetch-hardcoded.js.map","import { generateQueryKey, generateQueryVariablesSignature } from './variables-generator';\r\nexport class GraphQLRequestClientFetcher {\r\n    constructor(visitor) {\r\n        this.visitor = visitor;\r\n    }\r\n    generateFetcherImplementaion() {\r\n        return `\r\nfunction fetcher<TData, TVariables>(client: GraphQLClient, query: string, variables?: TVariables) {\r\n  return async (): Promise<TData> => client.request<TData, TVariables>(query, variables);\r\n}`;\r\n    }\r\n    generateQueryHook(node, documentVariableName, operationName, operationResultType, operationVariablesTypes, hasRequiredVariables) {\r\n        const variables = generateQueryVariablesSignature(hasRequiredVariables, operationVariablesTypes);\r\n        this.visitor.imports.add(`import { GraphQLClient } from 'graphql-request';`);\r\n        const hookConfig = this.visitor.queryMethodMap;\r\n        this.visitor.reactQueryIdentifiersInUse.add(hookConfig.query.hook);\r\n        this.visitor.reactQueryIdentifiersInUse.add(hookConfig.query.options);\r\n        const options = `options?: ${hookConfig.query.options}<${operationResultType}, TError, TData>`;\r\n        return `export const use${operationName} = <\r\n      TData = ${operationResultType},\r\n      TError = unknown\r\n    >(\r\n      client: GraphQLClient, \r\n      ${variables}, \r\n      ${options}\r\n    ) => \r\n    ${hookConfig.query.hook}<${operationResultType}, TError, TData>(\r\n      ${generateQueryKey(node)},\r\n      fetcher<${operationResultType}, ${operationVariablesTypes}>(client, ${documentVariableName}, variables),\r\n      options\r\n    );`;\r\n    }\r\n    generateMutationHook(node, documentVariableName, operationName, operationResultType, operationVariablesTypes) {\r\n        const variables = `variables?: ${operationVariablesTypes}`;\r\n        this.visitor.imports.add(`import { GraphQLClient } from 'graphql-request';`);\r\n        const hookConfig = this.visitor.queryMethodMap;\r\n        this.visitor.reactQueryIdentifiersInUse.add(hookConfig.mutation.hook);\r\n        this.visitor.reactQueryIdentifiersInUse.add(hookConfig.mutation.options);\r\n        const options = `options?: ${hookConfig.mutation.options}<${operationResultType}, TError, ${operationVariablesTypes}, TContext>`;\r\n        return `export const use${operationName} = <\r\n      TError = unknown,\r\n      TContext = unknown\r\n    >(\r\n      client: GraphQLClient, \r\n      ${options}\r\n    ) => \r\n    ${hookConfig.mutation.hook}<${operationResultType}, TError, ${operationVariablesTypes}, TContext>(\r\n      (${variables}) => fetcher<${operationResultType}, ${operationVariablesTypes}>(client, ${documentVariableName}, variables)(),\r\n      options\r\n    );`;\r\n    }\r\n}\r\n//# sourceMappingURL=fetcher-graphql-request.js.map","import { parseMapper, buildMapperImport } from '@graphql-codegen/visitor-plugin-common';\r\nexport class CustomMapperFetcher {\r\n    constructor(visitor, fetcherStr) {\r\n        this.visitor = visitor;\r\n        this._mapper = parseMapper(fetcherStr);\r\n    }\r\n    getFetcherFnName() {\r\n        if (this._mapper.isExternal) {\r\n            return this._mapper.type;\r\n        }\r\n        return this._mapper.type;\r\n    }\r\n    generateFetcherImplementaion() {\r\n        if (this._mapper.isExternal) {\r\n            return buildMapperImport(this._mapper.source, [\r\n                {\r\n                    identifier: this._mapper.type,\r\n                    asDefault: this._mapper.default,\r\n                },\r\n            ], this.visitor.config.useTypeImports);\r\n        }\r\n        return null;\r\n    }\r\n    generateQueryHook(node, documentVariableName, operationName, operationResultType, operationVariablesTypes, hasRequiredVariables) {\r\n        const variables = `variables${hasRequiredVariables ? '' : '?'}: ${operationVariablesTypes}`;\r\n        const hookConfig = this.visitor.queryMethodMap;\r\n        this.visitor.reactQueryIdentifiersInUse.add(hookConfig.query.hook);\r\n        this.visitor.reactQueryIdentifiersInUse.add(hookConfig.query.options);\r\n        const options = `options?: ${hookConfig.query.options}<${operationResultType}, TError, TData>`;\r\n        return `export const use${operationName} = <\r\n      TData = ${operationResultType},\r\n      TError = unknown\r\n    >(\r\n      ${variables}, \r\n      ${options}\r\n    ) => \r\n    ${hookConfig.query.hook}<${operationResultType}, TError, TData>(\r\n      ['${node.name.value}', variables],\r\n      ${this.getFetcherFnName()}<${operationResultType}, ${operationVariablesTypes}>(${documentVariableName}, variables),\r\n      options\r\n    );`;\r\n    }\r\n    generateMutationHook(node, documentVariableName, operationName, operationResultType, operationVariablesTypes) {\r\n        const variables = `variables?: ${operationVariablesTypes}`;\r\n        const hookConfig = this.visitor.queryMethodMap;\r\n        this.visitor.reactQueryIdentifiersInUse.add(hookConfig.mutation.hook);\r\n        this.visitor.reactQueryIdentifiersInUse.add(hookConfig.mutation.options);\r\n        const options = `options?: ${hookConfig.mutation.options}<${operationResultType}, TError, ${operationVariablesTypes}, TContext>`;\r\n        return `export const use${operationName} = <\r\n      TError = unknown,\r\n      TContext = unknown\r\n    >(${options}) => \r\n    ${hookConfig.mutation.hook}<${operationResultType}, TError, ${operationVariablesTypes}, TContext>(\r\n      (${variables}) => ${this.getFetcherFnName()}<${operationResultType}, ${operationVariablesTypes}>(${documentVariableName}, variables)(),\r\n      options\r\n    );`;\r\n    }\r\n}\r\n//# sourceMappingURL=fetcher-custom-mapper.js.map","import { ClientSideBaseVisitor, DocumentMode, } from '@graphql-codegen/visitor-plugin-common';\r\nimport autoBind from 'auto-bind';\r\nimport { FetchFetcher } from './fetcher-fetch';\r\nimport { HardcodedFetchFetcher } from './fetcher-fetch-hardcoded';\r\nimport { GraphQLRequestClientFetcher } from './fetcher-graphql-request';\r\nimport { CustomMapperFetcher } from './fetcher-custom-mapper';\r\nimport { pascalCase } from 'pascal-case';\r\nimport { generateQueryKeyMaker } from './variables-generator';\r\nexport class ReactQueryVisitor extends ClientSideBaseVisitor {\r\n    constructor(schema, fragments, rawConfig, documents) {\r\n        super(schema, fragments, rawConfig, {\r\n            documentMode: DocumentMode.string,\r\n        });\r\n        this.rawConfig = rawConfig;\r\n        this.reactQueryIdentifiersInUse = new Set();\r\n        this.queryMethodMap = {\r\n            query: {\r\n                hook: 'useQuery',\r\n                options: 'UseQueryOptions',\r\n            },\r\n            mutation: {\r\n                hook: 'useMutation',\r\n                options: 'UseMutationOptions',\r\n            },\r\n        };\r\n        this._externalImportPrefix = this.config.importOperationTypesFrom ? `${this.config.importOperationTypesFrom}.` : '';\r\n        this._documents = documents;\r\n        this.fetcher = this.createFetcher(rawConfig.fetcher || 'fetch');\r\n        autoBind(this);\r\n    }\r\n    get imports() {\r\n        return this._imports;\r\n    }\r\n    createFetcher(raw) {\r\n        if (raw === 'fetch') {\r\n            return new FetchFetcher(this);\r\n        }\r\n        else if (typeof raw === 'object' && raw.endpoint) {\r\n            return new HardcodedFetchFetcher(this, raw);\r\n        }\r\n        else if (raw === 'graphql-request') {\r\n            return new GraphQLRequestClientFetcher(this);\r\n        }\r\n        return new CustomMapperFetcher(this, raw);\r\n    }\r\n    getImports() {\r\n        const baseImports = super.getImports();\r\n        const hasOperations = this._collectedOperations.length > 0;\r\n        if (!hasOperations) {\r\n            return baseImports;\r\n        }\r\n        return [...baseImports, `import { ${Array.from(this.reactQueryIdentifiersInUse).join(', ')} } from 'react-query';`];\r\n    }\r\n    getFetcherImplementation() {\r\n        return this.fetcher.generateFetcherImplementaion();\r\n    }\r\n    buildOperation(node, documentVariableName, operationType, operationResultType, operationVariablesTypes, hasRequiredVariables) {\r\n        var _a, _b;\r\n        const operationName = this.convertName((_b = (_a = node.name) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : '', {\r\n            suffix: this.config.omitOperationSuffix ? '' : pascalCase(operationType),\r\n            useTypesPrefix: false,\r\n        });\r\n        operationResultType = this._externalImportPrefix + operationResultType;\r\n        operationVariablesTypes = this._externalImportPrefix + operationVariablesTypes;\r\n        if (operationType === 'Query') {\r\n            let query = this.fetcher.generateQueryHook(node, documentVariableName, operationName, operationResultType, operationVariablesTypes, hasRequiredVariables);\r\n            if (this.rawConfig.exposeQueryKeys) {\r\n                query += generateQueryKeyMaker(node, operationName, operationVariablesTypes, hasRequiredVariables);\r\n            }\r\n            return query;\r\n        }\r\n        else if (operationType === 'Mutation') {\r\n            return this.fetcher.generateMutationHook(node, documentVariableName, operationName, operationResultType, operationVariablesTypes);\r\n        }\r\n        else if (operationType === 'Subscription') {\r\n            // eslint-disable-next-line no-console\r\n            console.warn(`Plugin \"typescript-react-query\" does not support GraphQL Subscriptions at the moment! Ignoring \"${node.name.value}\"...`);\r\n        }\r\n        return null;\r\n    }\r\n}\r\n//# sourceMappingURL=visitor.js.map","import { visit, concatAST, Kind } from 'graphql';\r\nimport { ReactQueryVisitor } from './visitor';\r\nimport { extname } from 'path';\r\nexport const plugin = (schema, documents, config) => {\r\n    const allAst = concatAST(documents.map(v => v.document));\r\n    const allFragments = [\r\n        ...allAst.definitions.filter(d => d.kind === Kind.FRAGMENT_DEFINITION).map(fragmentDef => ({\r\n            node: fragmentDef,\r\n            name: fragmentDef.name.value,\r\n            onType: fragmentDef.typeCondition.name.value,\r\n            isExternal: false,\r\n        })),\r\n        ...(config.externalFragments || []),\r\n    ];\r\n    const visitor = new ReactQueryVisitor(schema, allFragments, config, documents);\r\n    const visitorResult = visit(allAst, { leave: visitor });\r\n    return {\r\n        prepend: [...visitor.getImports(), visitor.getFetcherImplementation()],\r\n        content: [visitor.fragments, ...visitorResult.definitions.filter(t => typeof t === 'string')].join('\\n'),\r\n    };\r\n};\r\nexport const validate = async (schema, documents, config, outputFile) => {\r\n    if (extname(outputFile) !== '.ts' && extname(outputFile) !== '.tsx') {\r\n        throw new Error(`Plugin \"typescript-react-query\" requires extension to be \".ts\" or \".tsx\"!`);\r\n    }\r\n};\r\nexport { ReactQueryVisitor };\r\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"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"}